#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV.B   #10,R8
        CALL    #SOMATORIO
        JMP $                           ; jump to current location '$'
        
/*----------------------------------------------------------------------
Nome: SOMATORIO
Descrição: Soma o R4 com o R5 e deixa o próximo ímpar a ser somado no R6
Entrada: R8 - 
Saída: R7 -
----------------------------------------------------------------------*/
SOMATORIO
        MOV.B   #1,R4
        MOV.B   #3,R5
        MOV.B   #5,R6
        
        MOV.B   R4,R7
        ADD.B   R5,R7
SOMA        
        MOV.B   R7,R4
        MOV.B   R6,R5
        
        ADD.B   #2,R6
        
        MOV.B   R4,R7
        ADD.B   R5,R7
        
        CMP.B   R8,R6
        JLO     SOMA
        RET
                                        ; (endless loop)
        END
