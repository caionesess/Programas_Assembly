#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV.B   #111,R4
        MOV.B   #0,R5
        MOV.B   #0,R6
        MOV.B   #0,R7
        MOV.B   #0,R8
        CALL    #TRANSFORMA
        JMP $                           ; jump to current location '$'
    
TRANSFORMA
        CMP.B   #100,R4
        JHS     CEM
        JLO     TRANSFORMADOR
   
CEM
        SUB.B   #100,R4
        ADD.B   #1, R5
        JMP     TRANSFORMA
        
TRANSFORMADOR
        CMP.B   #10,R4
        JHS     DEZ
        JLO     UNIDADE
        
DEZ
        SUB.B   #10,R4
        ADD.B   #1, R6
        JMP     TRANSFORMADOR
        
UNIDADE
        MOV.B   R4,R7
        
        RET
                                        ; (endless loop)
        END
